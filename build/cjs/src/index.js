"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListDirectorySettings = exports.RemoveDirectorySettings = exports.MakeDirectorySettings = exports.AUTO_TX = exports.OperationParams = exports.CachingPolicy = exports.ExecutionPolicy = exports.CompactionPolicy = exports.ReplicationPolicy = exports.PartitioningPolicy = exports.ExplicitPartitions = exports.StoragePolicy = exports.ColumnFamilyPolicy = exports.StorageSettings = exports.TableIndex = exports.TableProfile = exports.Column = exports.AlterTableDescription = exports.TableDescription = exports.BulkUpsertSettings = exports.ReadTableSettings = exports.ExecuteScanQuerySettings = exports.ExecuteQuerySettings = exports.PrepareQuerySettings = exports.DescribeTableSettings = exports.RollbackTransactionSettings = exports.CommitTransactionSettings = exports.BeginTransactionSettings = exports.DropTableSettings = exports.AlterTableSettings = exports.CreateTableSettings = exports.Session = exports.SessionPool = exports.getNameConverter = exports.typeMetadataKey = exports.primitiveTypeToValue = exports.identityConversion = exports.snakeToCamelCaseConversion = exports.withTypeOptions = exports.TypedData = exports.TypedValues = exports.Types = exports.declareType = exports.Driver = exports.getFallbackLogFunction = exports.FallbackLogger = exports.setDefaultLogger = exports.setupLogger = exports.getLogger = exports.Ydb = void 0;
exports.StatusCode = exports.YdbError = exports.RetryParameters = exports.withRetries = exports.StaticCredentialsAuthService = exports.MetadataAuthService = exports.TokenAuthService = exports.IamAuthService = exports.AnonymousAuthService = exports.parseConnectionString = exports.getSACredentialsFromJson = exports.getCredentialsFromEnv = exports.ModifyPermissionsSettings = exports.DescribePathSettings = void 0;
var ydb_sdk_proto_1 = require("ydb-sdk-proto");
Object.defineProperty(exports, "Ydb", { enumerable: true, get: function () { return ydb_sdk_proto_1.Ydb; } });
var logging_1 = require("./logging");
Object.defineProperty(exports, "getLogger", { enumerable: true, get: function () { return logging_1.getLogger; } });
Object.defineProperty(exports, "setupLogger", { enumerable: true, get: function () { return logging_1.setupLogger; } });
Object.defineProperty(exports, "setDefaultLogger", { enumerable: true, get: function () { return logging_1.setDefaultLogger; } });
Object.defineProperty(exports, "FallbackLogger", { enumerable: true, get: function () { return logging_1.FallbackLogger; } });
Object.defineProperty(exports, "getFallbackLogFunction", { enumerable: true, get: function () { return logging_1.getFallbackLogFunction; } });
var driver_1 = require("./driver");
Object.defineProperty(exports, "Driver", { enumerable: true, get: function () { return __importDefault(driver_1).default; } });
var types_1 = require("./types");
Object.defineProperty(exports, "declareType", { enumerable: true, get: function () { return types_1.declareType; } });
Object.defineProperty(exports, "Types", { enumerable: true, get: function () { return types_1.Types; } });
Object.defineProperty(exports, "TypedValues", { enumerable: true, get: function () { return types_1.TypedValues; } });
Object.defineProperty(exports, "TypedData", { enumerable: true, get: function () { return types_1.TypedData; } });
Object.defineProperty(exports, "withTypeOptions", { enumerable: true, get: function () { return types_1.withTypeOptions; } });
Object.defineProperty(exports, "snakeToCamelCaseConversion", { enumerable: true, get: function () { return types_1.snakeToCamelCaseConversion; } });
Object.defineProperty(exports, "identityConversion", { enumerable: true, get: function () { return types_1.identityConversion; } });
Object.defineProperty(exports, "primitiveTypeToValue", { enumerable: true, get: function () { return types_1.primitiveTypeToValue; } });
Object.defineProperty(exports, "typeMetadataKey", { enumerable: true, get: function () { return types_1.typeMetadataKey; } });
Object.defineProperty(exports, "getNameConverter", { enumerable: true, get: function () { return types_1.getNameConverter; } });
var table_1 = require("./table");
Object.defineProperty(exports, "SessionPool", { enumerable: true, get: function () { return table_1.SessionPool; } });
Object.defineProperty(exports, "Session", { enumerable: true, get: function () { return table_1.Session; } });
Object.defineProperty(exports, "CreateTableSettings", { enumerable: true, get: function () { return table_1.CreateTableSettings; } });
Object.defineProperty(exports, "AlterTableSettings", { enumerable: true, get: function () { return table_1.AlterTableSettings; } });
Object.defineProperty(exports, "DropTableSettings", { enumerable: true, get: function () { return table_1.DropTableSettings; } });
Object.defineProperty(exports, "BeginTransactionSettings", { enumerable: true, get: function () { return table_1.BeginTransactionSettings; } });
Object.defineProperty(exports, "CommitTransactionSettings", { enumerable: true, get: function () { return table_1.CommitTransactionSettings; } });
Object.defineProperty(exports, "RollbackTransactionSettings", { enumerable: true, get: function () { return table_1.RollbackTransactionSettings; } });
Object.defineProperty(exports, "DescribeTableSettings", { enumerable: true, get: function () { return table_1.DescribeTableSettings; } });
Object.defineProperty(exports, "PrepareQuerySettings", { enumerable: true, get: function () { return table_1.PrepareQuerySettings; } });
Object.defineProperty(exports, "ExecuteQuerySettings", { enumerable: true, get: function () { return table_1.ExecuteQuerySettings; } });
Object.defineProperty(exports, "ExecuteScanQuerySettings", { enumerable: true, get: function () { return table_1.ExecuteScanQuerySettings; } });
Object.defineProperty(exports, "ReadTableSettings", { enumerable: true, get: function () { return table_1.ReadTableSettings; } });
Object.defineProperty(exports, "BulkUpsertSettings", { enumerable: true, get: function () { return table_1.BulkUpsertSettings; } });
Object.defineProperty(exports, "TableDescription", { enumerable: true, get: function () { return table_1.TableDescription; } });
Object.defineProperty(exports, "AlterTableDescription", { enumerable: true, get: function () { return table_1.AlterTableDescription; } });
Object.defineProperty(exports, "Column", { enumerable: true, get: function () { return table_1.Column; } });
Object.defineProperty(exports, "TableProfile", { enumerable: true, get: function () { return table_1.TableProfile; } });
Object.defineProperty(exports, "TableIndex", { enumerable: true, get: function () { return table_1.TableIndex; } });
Object.defineProperty(exports, "StorageSettings", { enumerable: true, get: function () { return table_1.StorageSettings; } });
Object.defineProperty(exports, "ColumnFamilyPolicy", { enumerable: true, get: function () { return table_1.ColumnFamilyPolicy; } });
Object.defineProperty(exports, "StoragePolicy", { enumerable: true, get: function () { return table_1.StoragePolicy; } });
Object.defineProperty(exports, "ExplicitPartitions", { enumerable: true, get: function () { return table_1.ExplicitPartitions; } });
Object.defineProperty(exports, "PartitioningPolicy", { enumerable: true, get: function () { return table_1.PartitioningPolicy; } });
Object.defineProperty(exports, "ReplicationPolicy", { enumerable: true, get: function () { return table_1.ReplicationPolicy; } });
Object.defineProperty(exports, "CompactionPolicy", { enumerable: true, get: function () { return table_1.CompactionPolicy; } });
Object.defineProperty(exports, "ExecutionPolicy", { enumerable: true, get: function () { return table_1.ExecutionPolicy; } });
Object.defineProperty(exports, "CachingPolicy", { enumerable: true, get: function () { return table_1.CachingPolicy; } });
Object.defineProperty(exports, "OperationParams", { enumerable: true, get: function () { return table_1.OperationParams; } });
Object.defineProperty(exports, "AUTO_TX", { enumerable: true, get: function () { return table_1.AUTO_TX; } });
var scheme_1 = require("./scheme");
Object.defineProperty(exports, "MakeDirectorySettings", { enumerable: true, get: function () { return scheme_1.MakeDirectorySettings; } });
Object.defineProperty(exports, "RemoveDirectorySettings", { enumerable: true, get: function () { return scheme_1.RemoveDirectorySettings; } });
Object.defineProperty(exports, "ListDirectorySettings", { enumerable: true, get: function () { return scheme_1.ListDirectorySettings; } });
Object.defineProperty(exports, "DescribePathSettings", { enumerable: true, get: function () { return scheme_1.DescribePathSettings; } });
Object.defineProperty(exports, "ModifyPermissionsSettings", { enumerable: true, get: function () { return scheme_1.ModifyPermissionsSettings; } });
var parse_env_vars_1 = require("./parse-env-vars");
Object.defineProperty(exports, "getCredentialsFromEnv", { enumerable: true, get: function () { return parse_env_vars_1.getCredentialsFromEnv; } });
Object.defineProperty(exports, "getSACredentialsFromJson", { enumerable: true, get: function () { return parse_env_vars_1.getSACredentialsFromJson; } });
var parse_connection_string_1 = require("./parse-connection-string");
Object.defineProperty(exports, "parseConnectionString", { enumerable: true, get: function () { return parse_connection_string_1.parseConnectionString; } });
var credentials_1 = require("./credentials");
Object.defineProperty(exports, "AnonymousAuthService", { enumerable: true, get: function () { return credentials_1.AnonymousAuthService; } });
Object.defineProperty(exports, "IamAuthService", { enumerable: true, get: function () { return credentials_1.IamAuthService; } });
Object.defineProperty(exports, "TokenAuthService", { enumerable: true, get: function () { return credentials_1.TokenAuthService; } });
Object.defineProperty(exports, "MetadataAuthService", { enumerable: true, get: function () { return credentials_1.MetadataAuthService; } });
Object.defineProperty(exports, "StaticCredentialsAuthService", { enumerable: true, get: function () { return credentials_1.StaticCredentialsAuthService; } });
var retries_1 = require("./retries");
Object.defineProperty(exports, "withRetries", { enumerable: true, get: function () { return retries_1.withRetries; } });
Object.defineProperty(exports, "RetryParameters", { enumerable: true, get: function () { return retries_1.RetryParameters; } });
var errors_1 = require("./errors");
Object.defineProperty(exports, "YdbError", { enumerable: true, get: function () { return errors_1.YdbError; } });
Object.defineProperty(exports, "StatusCode", { enumerable: true, get: function () { return errors_1.StatusCode; } });
